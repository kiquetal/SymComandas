<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ProductoImages', 'doctrine');

/**
 * BaseProductoImages
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $product_id
 * @property string $path_img
 * @property integer $id
 * @property Producto $Producto
 * 
 * @method integer        getProductId()  Returns the current record's "product_id" value
 * @method string         getPathImg()    Returns the current record's "path_img" value
 * @method integer        getId()         Returns the current record's "id" value
 * @method Producto       getProducto()   Returns the current record's "Producto" value
 * @method ProductoImages setProductId()  Sets the current record's "product_id" value
 * @method ProductoImages setPathImg()    Sets the current record's "path_img" value
 * @method ProductoImages setId()         Sets the current record's "id" value
 * @method ProductoImages setProducto()   Sets the current record's "Producto" value
 * 
 * @package    comandas
 * @subpackage model
 * @author     Kiquetal
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProductoImages extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('producto_images');
        $this->hasColumn('product_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('path_img', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Producto', array(
             'local' => 'product_id',
             'foreign' => 'id'));
    }
}