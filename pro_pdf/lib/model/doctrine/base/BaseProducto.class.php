<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Producto', 'doctrine');

/**
 * BaseProducto
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property integer $state
 * @property Doctrine_Collection $ProductoImages
 * @property Doctrine_Collection $SubProducto
 * 
 * @method integer             getId()             Returns the current record's "id" value
 * @method string              getName()           Returns the current record's "name" value
 * @method integer             getState()          Returns the current record's "state" value
 * @method Doctrine_Collection getProductoImages() Returns the current record's "ProductoImages" collection
 * @method Doctrine_Collection getSubProducto()    Returns the current record's "SubProducto" collection
 * @method Producto            setId()             Sets the current record's "id" value
 * @method Producto            setName()           Sets the current record's "name" value
 * @method Producto            setState()          Sets the current record's "state" value
 * @method Producto            setProductoImages() Sets the current record's "ProductoImages" collection
 * @method Producto            setSubProducto()    Sets the current record's "SubProducto" collection
 * 
 * @package    comandas
 * @subpackage model
 * @author     Kiquetal
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProducto extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('producto');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('state', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('ProductoImages', array(
             'local' => 'id',
             'foreign' => 'product_id'));

        $this->hasMany('SubProducto', array(
             'local' => 'id',
             'foreign' => 'producto_id'));
    }
}