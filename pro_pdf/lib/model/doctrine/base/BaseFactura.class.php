<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Factura', 'doctrine');

/**
 * BaseFactura
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property timestamp $ts
 * @property string $name
 * @property string $ruc
 * @property integer $pedido_id
 * @property decimal $sub_total
 * @property decimal $iva
 * @property decimal $total
 * 
 * @method integer   getId()        Returns the current record's "id" value
 * @method timestamp getTs()        Returns the current record's "ts" value
 * @method string    getName()      Returns the current record's "name" value
 * @method string    getRuc()       Returns the current record's "ruc" value
 * @method integer   getPedidoId()  Returns the current record's "pedido_id" value
 * @method decimal   getSubTotal()  Returns the current record's "sub_total" value
 * @method decimal   getIva()       Returns the current record's "iva" value
 * @method decimal   getTotal()     Returns the current record's "total" value
 * @method Factura   setId()        Sets the current record's "id" value
 * @method Factura   setTs()        Sets the current record's "ts" value
 * @method Factura   setName()      Sets the current record's "name" value
 * @method Factura   setRuc()       Sets the current record's "ruc" value
 * @method Factura   setPedidoId()  Sets the current record's "pedido_id" value
 * @method Factura   setSubTotal()  Sets the current record's "sub_total" value
 * @method Factura   setIva()       Sets the current record's "iva" value
 * @method Factura   setTotal()     Sets the current record's "total" value
 * 
 * @package    comandas
 * @subpackage model
 * @author     Kiquetal
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFactura extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('factura');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('ts', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('name', 'string', 80, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 80,
             ));
        $this->hasColumn('ruc', 'string', 110, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 110,
             ));
        $this->hasColumn('pedido_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('sub_total', 'decimal', 8, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             'scale' => '2',
             ));
        $this->hasColumn('iva', 'decimal', 8, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             'scale' => '2',
             ));
        $this->hasColumn('total', 'decimal', 8, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             'scale' => '2',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}